
<!-- Page header -->
<div class="page-header d-print-none">
    <div class="container-xl">
        <div class="row g-2 align-items-center">
            <div class="col">
                <!-- Page pre-title -->
                <div class="page-pretitle">
                    Обзор
                </div>
                <h2 class="page-title">
                    Менеджер паролей
                </h2>
            </div>
            <!-- Page title actions -->
            <div class="col-auto ms-auto d-print-none">
                @if ((bool)ViewBag.HasSecretPhrase)
                {
                    <div class="btn-list">

                        <a class="btn btn-dark d-none d-sm-inline-block" onclick="onShowModalCreatePassword()">
                            <!-- Download SVG icon from http://tabler-icons.io/i/plus -->
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M12 5l0 14" /><path d="M5 12l14 0" /></svg>
                            Новый сервис
                        </a>
                        <a class="btn btn-dark d-sm-none btn-icon" aria-label="Добавить новый сервис" onclick="onShowModalCreatePassword()">
                            <!-- Download SVG icon from http://tabler-icons.io/i/plus -->
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M12 5l0 14" /><path d="M5 12l14 0" /></svg>
                        </a>
                    </div>
                }
                else
                {
                    <div class="btn-list" style="cursor: pointer !important;" title="Для пользователя не установлен SecretPhrase! Необходимо добавить его в настройках!">

                        <a class="btn btn-dark d-none d-sm-inline-block disabled">
                            <!-- Download SVG icon from http://tabler-icons.io/i/plus -->
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M12 5l0 14" /><path d="M5 12l14 0" /></svg>
                            Новый сервис
                        </a>
                        <a class="btn btn-dark d-sm-none btn-icon disabled">
                            <!-- Download SVG icon from http://tabler-icons.io/i/plus -->
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M12 5l0 14" /><path d="M5 12l14 0" /></svg>
                        </a>
                    </div>
                }
                
            </div>
        </div>
    </div>
</div>
<!-- Page body -->
<div class="page-body">
    <div class="container-xl">
        <div class="row row-cards" id="table_container"></div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        onReloadPasswordsTable();
    });

    function onReloadPasswordsTable()
    {
        showSpinner();
        $.get('@Url.Action("GetPasswords", "PasswordsKeeper")', null, function (data) {
            $('#table_container').html(data);
            hideSpinner();
        });
    }

    function onShowModalCreatePassword()
    {
        $.get('@Url.Action("ShowModalCreateNewPassword", "PasswordsKeeper")', null, function (data) {
            $('#modal_body').html(data);
            globalOpenModal();
        });
    }

    function onShowModalUpdatePassword(ItemId) {
        $.get('@Url.Action("ShowModalUpdatePassword", "PasswordsKeeper")', { ItemId: ItemId }, function (data) {
            $('#modal_body').html(data);
            globalOpenModal();
        });
    }

    function validURL(str) {
        var pattern = new RegExp('^(https?:\\/\\/)?' + // protocol
            '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|' + // domain name
            '((\\d{1,3}\\.){3}\\d{1,3}))' + // OR ip (v4) address
            '(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*' + // port and path
            '(\\?[;&a-z\\d%_.~+=-]*)?' + // query string
            '(\\#[-a-z\\d_]*)?$', 'i'); // fragment locator
        return !!pattern.test(str);
    }

    function onAddUpdateService()
    {
        showSpinner();
        var ValidFields = true;
        var ServiceName = document.getElementById('ServiceName').value;
        var UserName = document.getElementById('UserName').value;
        var WebSite = document.getElementById('WebSite').value;
        var Email = document.getElementById('Email').value;
        var Additional = document.getElementById('Additional').value;
        var ItemId = document.getElementById('ItemId').value;
        var WebSite = document.getElementById('WebSite').value;
        var Password = document.getElementById('Password').value;

        if (ServiceName == null || ServiceName == '' || ServiceName.length < 3) {
            ValidFields = false;
            hideSpinner();
            AlertValidate('Название сервиса должно иметь более 3 символов!');
        }

        if (ValidFields)
        {
            if (UserName == null || UserName == '' || UserName.length < 3) {
                ValidFields = false;
                hideSpinner();
                AlertValidate('Имя пользователя должно иметь более 3 символов!');
            }
        }

        if (ValidFields) {

            if (Email != null && Email != '') {
                let pattern = /^[^ ]+@@[^ ]+\.[a-z]{2,3}$/;
                if (!Email.match(pattern)) {
                    ValidFields = false;
                    hideSpinner();
                    AlertValidate('Email введен некорректно!');
                }                
            }           
        }

        if (ValidFields) {
            if (Password == null || Password == '' || Password.length < 5) {
                ValidFields = false;
                hideSpinner();
                AlertValidate('Пароль должен иметь более 5 символов!');
            }
        }

        if (ValidFields)
        {
            var isValidURL = validURL(WebSite);
            if (!isValidURL)
            {
                ValidFields = false;
                hideSpinner();
                AlertValidate('URL введена некорректно!');
            }
        }

        var model = {};
        model["ServiceName"] = ServiceName;
        model["UserName"] = UserName;
        model["Email"] = Email;
        model["WebSite"] = WebSite;
        model["Additional"] = Additional;
        model["Password"] = Password;

        if (ItemId != '0' && ItemId != 0)
        {
            model["ItemId"] = ItemId;
        }
        
        if(ValidFields)
        {
            $.ajax({
                type: "POST",
                url: '@Url.Action("AddUpdateService","PasswordsKeeper")',
                data: { model: model },
                success: function (data) {
                    if (data != null && data != '') {
                        hideSpinner();
                        AlertValidate(data);
                    }
                    hideSpinner();
                    onReloadPasswordsTable();
                },
                error: function () {
                    hideSpinner();
                    AlertValidate(xhr.respomseText);
                }
            });
        }
        
    }

    
    function onSearch() {        
        var input = document.getElementById('serviceNameSearchInput');
        var filter = input.value.toUpperCase();       
        var lis = document.getElementsByClassName('serviceName');

        var regPhrase = new RegExp(input.value, 'i');        
        var flag = false;       

        for (var i = 0; i < lis.length; i++) {            
            flag = false;
            
            for (var j = lis.length - 1; j >= 0; j--) {                
                flag = regPhrase.test(lis[i].innerHTML);              
                if (flag) break;                
            }
            
            if (flag) 
            {                
                var parentNode = lis[i].parentNode;                
                parentNode.parentNode.parentNode.style.display = 'block';
            } 
            else 
            {                
                var parentNode = lis[i].parentNode;                
                parentNode.parentNode.parentNode.style.display = 'none';
            }           
        }        
    }

    function onShowModalDeletePassword(ItemId)
    {       
        $.get('@Url.Action("ShowModalDeletePasswordConfirmation", "PasswordsKeeper")', { ItemId: ItemId }, function (data) {
            $('#modal_body').html(data);
            globalOpenModal();
        });
    }


    function DeletePasswordService(ItemId)
    {
        $.get('@Url.Action("ModalDeletePasswordService", "PasswordsKeeper")', { ItemId: ItemId }, function (data) {
            if(data!=null && data!='')
            {
                AlertValidate(data);
            }
            else
            {        
                globalCloseModal();
                onReloadPasswordsTable();
            }
        });
    }
</script>